apply from: '../configs/lib.gradle'

android {
    namespace 'com.mirfatif.privtasks'
    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro', 'proguard-rules-pro.pro'
        }
    }
}

dependencies {
    compileOnly 'androidx.annotation:annotation:1.5.0'

    // Just to resolve APIs in editor
    compileOnly project(path: ':hidden_apis')
}

def createTasksForHiddenAPIs() {
    File dir = new File(rootDir, 'hidden_apis/build/intermediates/aar_main_jar/')

    for (boolean foss in new boolean[]{true, false}) {
        for (boolean debug in new boolean[]{true, false}) {
            String variant = (foss ? 'Foss' : 'Pro') + (debug ? 'Debug' : 'Release')

            Task task = tasks.findByName('compile' + variant + 'JavaWithJavac')
            task.dependsOn(':hidden_apis:sync' + variant + 'LibJars')

            task.doFirst {
                def bootClassPath = project.objects.fileCollection()
                bootClassPath.from(new File(dir, variant.uncapitalize() + '/classes.jar'))
                bootClassPath.from(options.getBootstrapClasspath())
                options.setBootstrapClasspath(bootClassPath)
            }
        }
    }

}

afterEvaluate {
    createTasksForHiddenAPIs()
}
